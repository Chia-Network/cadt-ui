# Compares the version in package.json to tags on the repo. If the tag doesn't exist, a new tag is created, which
# then triggers the normal "on tag" release automation in the build job
name: Auto Tag

on:
  push:
    branches:
      - main

concurrency:
  group: main-release-check

jobs:
  check-version:
    name: Check version increment
    runs-on: ubuntu-latest
    steps:
      - name: Clean workspace
        uses: Datalayer-Storage/actions/clean-workspace@main

      - name: Checkout current branch
        uses: actions/checkout@v3
        with:
          # Need GH_ACCESS_TOKEN token so when the tag is created, the tag automation runs
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          fetch-depth: 0

      - name: Setup commit signing for ChiaAutomation
        uses: Datalayer-Storage/actions/commit-sign/gpg@main
        with:
          gpg_private_key: ${{ secrets.AUTOMATION_PRIVATE_GPG_KEY }}
          passphrase: ${{ secrets.AUTOMATION_PRIVATE_GPG_PASSPHRASE }}

      - name: Check for current version tag. Create if it doesn't exist
        run: |
          version=$(cat $GITHUB_WORKSPACE/package.json | jq -r '.version')
          echo "Version is: $version"

          if [ $(git tag -l "$version") ]; then
            echo "Tag exists, nothing to do"
          else
            echo "Tag does not exist. Creating and pushing tag"
            rm -f CHANGELOG.md
            npx conventional-changelog-cli -p angular -i CHANGELOG.md -s -r 0
            changes=$(npx conventional-changelog-cli -r 1 | tail -n +2)
            git add CHANGELOG.md
            sed -i -e '/<s>/d' CHANGELOG.md
            git commit -m "Updating changelog for $version"
            git tag $version -m "Release $version  $changes"
            git push origin $version
            git push origin main
          fi